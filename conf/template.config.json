{
        "logger": {
                "type": "global",
                "sinkaddress": "/tmp/grease.socket",
                "config": "${thisdir}/relay_logger.conf.json"
        },
        "container_templates": {
                "example_container": {
                        "capabilities": {
                                "NET_BIND_SERVICE": "permitted"
                        },
                        "cgroup_limits": {},
                        "chroot_prefix": "/tmp/devjs_container"
                }
        },
        "deviceJSConfig": "/wigwag/etc/devicejs/devicejs.conf",
        "defaults": {
                "default_user": "*",  // means whoever runs it
                "default_group": "*"  // means whatever group runs it
        },
        "HOOK": {
            "LEDController": {
                "startWithRunner": true,
                "config": {
                        "ledBrightness": 5,
                        "ledColorProfile": "{{ledconfig}}"
                }
            }
        },
        "process_groups": {
                "core": {
                        "limits": {
                                "cgroup_limits": {},
                                "capabilties": {}
                        },
                        "node_args": [
                "--max-executable-size=96",
                "--max-old-space-size=128",
                "--max-semi-space-size=1",
                "--nouse-idle-notification"
                        ],
                        "restart" : {
                            "limit" : 5000,
                            "timeout" : 90000
                        },
                        "modules": {},
//                        "user": "devicejs",
//                        "group": "devicejs",
                        "deviceJSCore": {
                                "root": "/wigwag/devicejs-ng",
                                "opts": [],
                                "execWaitTimeMS": 15000  // I need this to wait this long for now
                        }
                },
                "db": {
                    "restart": {
                        "limit": 5000,
                        "timeout": 2000
                    },
                    "execPath":"/usr/bin/devicedb",
                    "configFile": "/wigwag/etc/devicejs/devicedb.yaml"
                },
        "all-modules": {
                        "limits": {
                                "limit_group": ""
                                // cgroup limits here - TBD
                        },
                        "node_args": [
                            "--max-executable-size=96",
                            "--max-old-space-size=128",
                            "--max-semi-space-size=1"
                        ],
                        "restart": {          // not required, but options are:
                            "timeout" : 90000,  // the timeout between restarts will still take affect
                            "limit" : 5000
                        },
                        "env": {
                                "NODE_PATH": "${NODE_PATH}:${thisdir}/../node_modules:/wigwag/devicejs-core-modules/IPStack/node_modules"
                        },
                        "modules": [                                           
                                {
                                        "path": "${thisdir}/../wigwag-devices",
                                        "config": {
                                                 "cloudURL": "{{cloudurl}}",
                                                 "ssl": {
                                                        "key": "/wigwag/devicejs-core-modules/Runner/.ssl/client.key.pem",
                                                        "cert": "/wigwag/devicejs-core-modules/Runner/.ssl/client.cert.pem",
                                                        "ca": [
                                                          "/wigwag/devicejs-core-modules/Runner/.ssl/ca.cert.pem",
                                                          "/wigwag/devicejs-core-modules/Runner/.ssl/intermediate.cert.pem"
                                                        ]
                                            },
                                                 "apiKey": "{{apikey}}",
                                                "udpSourcePort": 3000,
                                                "udpDestinationPort": 3001,
                                                "platform": "{{wwplatform}}",
                                                "sixlbr": {
                                                        "ifname": "Witap0",
                                                        "wsnNet": "bbbb::100",
                                                        "sixlbr": {
                                                                "tundev": "Witap0",
                                                                "use_raw_ethernet": false,
                                                                "log_level": [
                                                                        "error", "routing", "info", "debug", "trace"
                                                                ],
                                                                "platform": "{{wwplatform}}",
                                                                "siodev": "{{sixlbrtty}}",
                                                                "siodev_secondary": "ttyUSB1",
                                                                "sixBMAC": "{{sixbmac}}",
                                                                "baudrate": 115200,
                                                                "slip_delay": 0,
                                                                "ww_encryption": true,
                                                                "firmware_path_mc1322": "/home/yashgoyal/workspace/devicejs/core/",
                                                                "firmware_file_prefix": "slip-radio_econotag",
                                                                "reset_GPIO_path_firmware_mc1322": "/sys/class/gpio/gpio105/value",
                                                                "erase_GPIO_path_firmware_mc1322": "/sys/class/gpio/gpio103/value",
                                                                "reset_GPIO_path_firmware_cc2530": "{{sixlbrreset}}",
                                                                "relay_version": 7,
                                                                "nvm_data": {
                                                                        "channel": 20,
                                                                        "rpl_dio_intdoubl": 1,
                                                                        "rpl_dio_intmin": 12,
                                                                        "rpl_default_lifetime": 4,
                                                                        "rpl_lifetime_unit": 100,
                                                                        "rpl_version_id": 247
                                                                }
                                                        }
                                                }
                                        }
                                },
                                {
                                        "path": "${thisdir}/../core-lighting",
                                        "config": {}
                                },
                                {
                                        "path": "${thisdir}/../core-interfaces",
                                        "config": {}
                                },                                           
                                {
                                        "path": "${thisdir}/../zigbeeHA",
                                        "config": {
                                            "siodev": "{{zigbeehatty}}",
                                            "devType": 0,
                                            "newNwk": false,
                                            "channelMask": 11,
                                            "baudRate": 115200,
                                            "log_level": 1,
                                            "networkRefreshDuration": 30000,
                                            "panIdSelection": "random",
                                            "panId": 65535,
                                            "platform": "{{wwplatform}}"
                                        }
                                },
                                {
                                        "path": "${thisdir}/../../wigwag-core-modules/RelayStatsSender",
                                        "config": {
                                            "cloudAddress": "{{cloudurl}}",
                                            "relayID": "{{apikey}}",
                                            "ssl": {
                                                "key": "/wigwag/devicejs-core-modules/Runner/.ssl/client.key.pem",
                                                "cert": "/wigwag/devicejs-core-modules/Runner/.ssl/client.cert.pem",
                                                "ca": [
                                                    "/wigwag/devicejs-core-modules/Runner/.ssl/ca.cert.pem",
                                                    "/wigwag/devicejs-core-modules/Runner/.ssl/intermediate.cert.pem"
                                                ]
                                            },
                                            "versionsFile": "/wigwag/etc/versions.json"

                                        }
                                },
                                {
                                        "path": "${thisdir}/../ww-zwave",
                                        "config": {
                                                "serialInterfaceOptions": {
                                                        "siodev": "{{zwavetty}}",
                                                        "baudrate": 115200,
                                                        "dataBits": 8,
                                                        "stopBits": 1
                                                },
                                                "platform": "{{wwplatform}}"
                                        }
                                },
                                {
                                        "path": "${thisdir}/../ModbusRTU",
                                        "config": { 
                                            "serialInterfaceOptions": { //Used to setup comms with Modbus slave device
                                                "siodev": "/dev/ttyUSB0",
                                                "baudrate": 19200,
                                                "dataBits": 8,
                                                "stopBits": 1,
                                                "parity": "none",
                                                "endPacketTimeout": 15
                                            },
                                            "logLevel": 1, //Available- info- 2, debug- 3, trace- 4, error- 0, warn- 1
                                            "platform": "{{wwplatform}}", //Used to identify platform so that module can adapt and run automagically
                                            "maxTransportRetries": 1, //Transport layer retries, message retries are default to 3 so total retries will be 4
                                            "responseTimeout": 500, //Timeout if no data received on request (in ms)
                                            "modbusResourceId": "ModbusRTU", //ID on which the Modbus module will be registered with DeviceJS
                                            "supportedResourceTypesDirectory": "controllers/supportedResourceTypes", //Directory where all the resouces are or will be defined,
                                            "runtimeResourceTypesDirectory": "controllers/runtimeResourceTypes",
                                            "simulate": false, //Should be false in production, if true it will run even if there is no terminal connected
                                            "schedulerIntervalResolution": 500 //in ms, interval in which it will check if a resource command needs to be polled. Minimum 500ms. 
                                                                            //Define polling interval of device controller at this resolution
                                        }
                                },
                                {
                                        "path": "${thisdir}/../IPStack",
                                        "config": {
                                                "wan": [
                                                        "eth0",
                                                        "eth1",
                                                        "wlan0"
                                                ],
                                                "dhcp": "on",
                                                "static": {
                                                        "ipaddress": "10.10.20.31",
                                                        "mask": "255.255.255.0",
                                                        "gateway": "10.10.20.1"
                                                },
                                                "ethernetMAC": "{{ethernetmac}}"
                                        }
                                },
                                {
                                        "path": "${thisdir}/../../wigwag-core-modules/MDNS",
                                        "config": {
                                                "id":"{{apikey}}",
                                                "waitForIPStack": true,
                                                "port": 443 
                                        }
                                }
                        ]
                },
                "user": {
                        "limits": {
                                "limit_group": ""
                        },
                        "node_args": [
                            "--max-executable-size=96",
                            "--max-old-space-size=128",
                            "--max-semi-space-size=1"
                        ],
                        "restart" : {
                            "limit" : 5000,
                            "timeout" : 90000
                        },
                        "env": {
                                "NODE_PATH": "${NODE_PATH}:${thisdir}/../node_modules"
                        },
                        "modules": [
                                {
                                        "path": "${thisdir}/../../wigwag-core-modules/RuleEngine",
                                        "config": {
                                            "cloudAddress": "{{cloudurl}}",
                                            "relayID": "{{apikey}}",
                                            "ssl": {
                                                    "key": "/wigwag/devicejs-core-modules/Runner/.ssl/client.key.pem",
                                                 "cert": "/wigwag/devicejs-core-modules/Runner/.ssl/client.cert.pem",
                                                        "ca": [
                                                            "/wigwag/devicejs-core-modules/Runner/.ssl/ca.cert.pem",
                                                            "/wigwag/devicejs-core-modules/Runner/.ssl/intermediate.cert.pem"
                                                        ]
                                            }

                                        }
                                },
                                {
                                        "path": "${thisdir}/../AppServer",
                                        "config": {
                                                "authentication": {
                                                        "enabled": true,
                                                        "cloudAPISecret": "{{apisecret}}",
                                                        "redirectURL": "/wigwag-ui/s/login/",
                                                         "cloudRedirectURL": "{{cloudurl}}/s/login"
                                                },
                                                "port": 443,
                                                "ssl": {
                                                    "key": "/wigwag/devicejs-core-modules/Runner/.ssl/client.key.pem",
                                                    "cert": "/wigwag/devicejs-core-modules/Runner/.ssl/client.cert.pem",
                                                    "ca": [ 
                                                           "/wigwag/devicejs-core-modules/Runner/.ssl/ca.cert.pem",
                                                           "/wigwag/devicejs-core-modules/Runner/.ssl/intermediate.cert.pem"
                                                     ]
                                                },
                                                "relayID":"{{apikey}}"
                                        }
                                },
                                {
                                        "path": "${thisdir}/../APIProxy",
                                        "config": {
                                                "cloudAPISecret": "{{apisecret}}",
                                                "apiKey": "hello",
                                                "apiSecret": "asdfdsfa"
                                        }
                                },
                                {
                                        "path": "${thisdir}/../../wigwag-core-modules/WigWagMobileUI",
                                        "config": {}
                                },
                                {
                                        "path": "${thisdir}/../../wigwag-core-modules/wigwag-ui",
                                        "config": {
                                                "cloudAPISecret": "{{apisecret}}"
                                        }
                                },
                                {
                                        "path": "${thisdir}/../../wigwag-core-modules/WWRelayWebUI",
                                        "config": {}
                                },
                                {
                                        "path": "${thisdir}/../../wigwag-core-modules/RuleUI",
                                        "config": {
                                           "debug_mode":true,
                                           "debug_level" : 3, // goes up to 3, default 1
                                           "RULE_NODE_TYPES_DIRECTORY": [
                                               "${thisdir}/../RuleEngine/src/nodes"
                                           ],
                                           "FORMS_DIR" : [
                                               { "path": "${thisdir}/../../wigwag-core-modules/RuleUI/schemaFormDialogs", "ignores" : ["_public"] }
                                           ]
                                         }
                                },
                                {
                                        "path": "${thisdir}/../../wigwag-core-modules/moods",
                                        "config": {
                                            "jwtSecret": "IXPySxxr0f5X2CIqdB45eK",
                                            "apiKey": "{{apikey}}",
                                            "apiSecret": "{{apisecret}}"

                                        }
                               }
                        ]
                }
        }
}
